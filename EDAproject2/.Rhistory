library(swirl)
swirl()
swirl()
head(EPA)
ls
ls()
head(pollution)
dim(pollution)
summary(pollution, pm25)
summary(pollution$pm25)
summary(ppm)
quantile(ppm)
boxplot(ppm)
boxplot(ppm, color="blue")
boxplot(ppm, col="blue")
abline(h=12)
hist(ppm,col="green")
rug(ppm)
low
high
hist(ppm, col="green", breaks=100)
rug(ppm)
hist(ppm,col="green")
abline(v=12, lwd=2)
abline(v=median(ppm), col="magenta", lwd=4)
names(pollution)
reg <- table(pollution$region)
reg
barplot(reg, col="wheat", main="Number of Countries in Each Region")
barplot(reg, col = "wheat", main = "Number of Counties in Each Region")
boxplot(pollution, col="red")
boxplot(pollution$pm25, col="red")
boxplot(pm25 ~ region, data=pollution, col="red")
par(mfrow=c(2,1),mar=c(4,4,2,1))
east <- subset(pollution, region=="east")
head(east)
hist(east$pm25, col="green")
hist(subset(pollution, region=="west")$pm25, col="green")
plot(latitude, pm25, data=pollution)
plot(pollution$latitude, pollution$pm25)
with(pollution, plot(latitude, pm25))
abline(h=12)
abline(h=12, lwd=2, lty=2)
plot(pollution$latitude, pollution$pm25, col=pollution$region)
plot(pollution$latitude, ppm, col=pollution$region)
abline(h=12, lwd=2, lty=2)
par(mfrow=c(1,2), mar=c(5,4,2,1))
west <- subset(pollution, region=="west")
plot(west$latitude, west$pm25, main="west")
plot(west$latitude, west$pm25, main="West")
plot(east$latitude, east$pm25, main="East")
library(swirl)
swirl()
swirl()
?Devices
plot(faithful$eruptions, faithful$waiting)
with(faithful, plot(eruptions, waiting))
title(main="Old Faithful Geyser data")
dev.cur()
pdf(file="myplot.pdf")
with(faithful, plot(eruptions, waiting))
title(main="Old Faithful Geyser data")
dev.cur()
dev.off()
dev.cur()
with(faithful, plot(eruptions, waiting))
title(main="Old Faithful Geyser data")
dev.copy(png, "geyserplot.png")
dev.copy(png, file="geyserplot.png")
dev.off()
head(cars)
with(cars, plot(speed, dist))
text( x = mean(cars$speed), y = max(cars$dist), "SWIRL rules!")
head(state)
''
table(state$region)
xyplot( Life.Exp ~ Income | region, data=state, layout = c(4,1) )
xyplot( Life.Exp ~ Income | region, data=state, layout = c(2,2) )
head(mpg)
dim(mpg)
table(mpg$model)
qplot(displ, hwy, data=mpg)
head(airquality)
range(airquality$ozone, na.rm=TRUE)
range(airquality$Ozone, na.rm=TRUE)
hist(airquality$Ozone)
dev.off()
dev.cur()
library(swirl)
swirl()
boxplot(airquality$Month)
table(airquality$Month)
boxplot(Ozone~month, data=airquality)
boxplot(Ozone~Month, data=airquality)
boxplot(Ozone~Month, xlab="Month", ylab = "Ozone", data=airquality)
boxplot(Ozone~Month, data=airquality, xlab="Month", ylab = "Ozone")
boxplot(Ozone~Month, data=airquality, xlab="Month", ylab = "Ozone (ppb)")
boxplot(Ozone~Month, data=airquality, xlab="Month", ylab = "Ozone (ppb)", col.axis="blue", col.lab="red")
title(main="Ozone and Wind in New York City")
with( airquality, plot( Wind, Ozone))
title(main="Ozone and Wind in New York City")
lengh(par())
length(par())
names(par())
?par
par()$pin
par("fg")
par("pch")
par("lty")
plot(airquality$wind, airquality$Ozone, set="n")
plot(airquality$wind, airquality$Ozone, set=="n")
scatter(airquality$wind, airquality$Ozone, set=="n")
plot(airquality$wind, airquality$Ozone)
dev.off()
dev.cur()
plot(airquality$Wind, type="n",airquality$Ozone)
title(main="Wind and Ozone in NYC")
may <- subset(airquality$Month == 5)
may <- airquality$Month
may <- subset(airquality, Month==5)
points(may$Wind, may$Ozone)
points(may$Wind, may$Ozone, col="blue", pch=17)
may <- subset(airquality$Month != 5)
notmay <- subset(airquality, Month != 5)
points(notmay$Wind, notmay$Ozone, col="red", pch=18)
points(notmay$Wind, notmay$Ozone, col="red", pch=8)
legend("topright", c(17,8), c("blue", "red"), c("May", "Other MOnths"))
legend("topright", pch=c(17,8), col=c("blue", "red"), legend=c("May", "Other MOnths"))
legend("topright",pch=c(17,8),col=c("blue","red"),legend=c("May","Other Months"))
lines( median(airquality$Wind), lty=2)
abline( v=median(airquality$Wind), lty=2)
abline( v=median(airquality$Wind), lty=2, lwd=2)
parameter(mfrow=c(1,2))
par(mfrow=c(1,2))
with(airquality, plot(Wind, Ozone, main="Ozone and Wind"))
plot(airquality$Wind, airquality$Ozone, main = "Ozone and Wind")
plot(airquality$Ozone, airquality$Solar.R, main="Ozone and Solar Radiation")
par(mfrow=c(1,3), mar=c(4,4,2,1), oma=c(0,0,2,0))
plot(airquality$Wind, airquality$Ozone, main="Ozone and Wind")
plot(airquality$Solar.R, airquality$Ozone, main="Ozone and Solar Radiation")
plot(airquality$Temp, airquality$Ozone, main="Ozone and Temperature")
mtext("Ozone and Weather in New York City", outer=TRUE)
library(swirl)
swirl()
swirl()
head(airquality)
xyplot(Ozone~Wind, data=airquality)
xyplot(Ozone~Wind, data=airquality, col="red", pch=8, main = "Big Apple Data")
xyplot(Ozone ~ Wind, data = airquality, pch=8, col="red", main="Big Apple Data")
xyplot(Ozone~Wind | as.factor(Month), data=airquality, layout = c(5,1))
xyplot(Ozone~Wind | Month, data=airquality, layout = c(5,1))
p <- xyplot(Ozone~Wind, data = airquality)
p
names(p)
mynames[myfull]
p[["formula"]]
p[["x.limits"]]
table(f)
xyplot(y~x|f, layout=c(2,1))
v1
v2
myedit("plot1.R")
source(pathtofile("plot1.R", local=TRUE))
source(pathtofile("plot1.R", local==TRUE))
source(pathtofile("plot1.R"), locl=TRUE))
source(pathtofile("plot1.R"), locl=TRUE)
source(pathtofile("plot1.R"), local=TRUE)
myedit("plot2.R")
source(pathtofile("plot2.R"), local=TRUE)
str(diamonds)
table(diamonds$color)
table(diamonds$color, diamonds$cut)
myedit("myLabels.R")
source(pathtofile("myLabels.R"), local=TRUE)
xyplot(price~carat|color*cut, data=diamonds, strip=FALSE, pch=20, xlab=myxlab, ylab=myylab, main="mymain")
xyplot(price~carat|color*cut,data=diamonds,strip=FALSE,pch=20,xlab=myxlab,ylab=myylab,main=mymain)
xyplot(price~carat|color*cut,data=diamonds,pch=20,xlab=myxlab,ylab=myylab,main=mymain)
library("swirl")
swirl()
swirl()
cmat
points(cx, cy, col=c("red", "orange", "purple"), pch=3, cex=2, lwd=2)
mdist
mdist(x,y,cx,cy)
apply(distTmp, 2, which.min)
points(x,y, pch=19, cex=2, col=cols1[newClust])
tapply(x, newClust, mean)
tapply(y, newClust, mean)
points(newCx, newCy, col=cols1, pch=8, cex=2, lwd=2)
dist(x,y, newCx, newCy)
dist()
dist(x,y,x,y)
mdist(x,y,newCx, newCy)
apply(distTmp2, 2, which.min)
points(x,y,pch=19, cex=2, col=cols1[newClust2])
tapply(x, newClust2, mean)
tapply(y, newClust2, mean)
points(finalCx, finalCy, col=cols1, pch=9, cex=2, lwd=2)
kmeans(dataFrame, centers=3)
kmObj$iter
plot(x,y, col = kmObj$cluster, pch=19, cex=2)
points(kmObj$centers, col=c("black", "red", "green"), pch=3, cex=3, lwd=3)
plot(x, y, col=kmeans(dataFrame, 6)$cluster, pch=19, cex=2)
plot(x, y, col=kmeans(dataFrame, 6)$cluster, pch=19, cex=2)
plot(x, y, col=kmeans(dataFrame, 6)$cluster, pch=19, cex=2)
head(dataMatrix)
heatmap(dataMatrix)
myedit("addPatt.R")
source("addPatt.R", local = TRUE)
heatmap(dataMatrix)
mat
svd(mat)
matu % diag % t(matv)
matu % diag
matu % t(matv)
matu %*% diag %*% t(matv)
svd(scale(mat))
prcomp(scale(mat))
svd$v[,1]
svd1$v[,1]
diag(svd1$d)
svd1$d
head(constantMatrix)
d
svd2$d
svd2
svd2$v[,1:2]
svd2$d
dim(faceData)
*
svd1$u %*% svd1$v
a1 <- svd1$u[,1] %*% t(svd1$v[,1]) * svd1$d[1]
myImage(image)
myImage(a1)
a2 <- svd1$u[,1:2] %*% diat(svd1$d[,1:2]) %*% t(svd1$v[,1:2])
a2 <- svd1$u[,1:2] %*% diag(svd1$d[,1:2]) %*% t(svd1$v[,1:2])
a2 <- svd1$u[,1:2] %*% svd1$d[,1:2] %*% t(svd1$v[,1:2])
a2 <- svd1$u[,1:2] %*% diag(svd1$d[1:2]) %*% t(svd1$v[,1:2])
myImage(a2)
a2 <- svd1$u[,1:5] %*% diag(svd1$d[1:5]) %*% t(svd1$v[,1:5])
myIMage(svd1$u[,1:5] %*% diag(svd1$d[1:5]) %*% t(svd1$v[,1:5]))
myImage(svd1$u[,1:5] %*% diag(svd1$d[1:5]) %*% t(svd1$v[,1:5]))
myImage(svd1$u[,1:10] %*% diag(svd1$d[1:10]) %*% t(svd1$v[,1:10]))
dim(ssd)
names(ssd[,562:563])
table(ssd$subject)
table(ssd$subject)
sum(table(ssd$subject))
table(ssd$activity)
sub1 <- subset(ssd, subject == 1)
sub1
dim(sub1)
names(sub1[,1:12])
myedit("showXY.R")
showMe(1:6)
mdist(sub1[,1:3])
mdist(dist(sub1[,1:3]))
mdist(x,y,cx,cy)
mdist <- dist(sub1[,1:3])
hclust(mdist)
hclustering(hclust(mdist))
hclustering <- hclust(mdist)
myplclust(hclustering, lab.col = unclass(sub1$activity))
mdist <- dist( sub1[,10:12] )
hclustering <- hclust(mdist)
myplclust( hclustering, lab.col = unclass(sub1$activity))
svd1 <- svd( scale(sub1[,-c(562,563)]) )
dim(svd1$u)
maxCon <- which.max(svd$v)
maxCon <- which.max(svd$v[,2])
maxCon <- which.max(svd1$v[,2])
mdist <- dist(sub[,10:12])
mdist <- dist(sub1[,10:12])
mdist <- dist(sub1[,c(10:12,maxCon)])
hclustering <- hclust(mdist)
mypclust( hclustering, lab.col = unclass(sub1$activity))
myplclust( hclustering, lab.col = unclass(sub1$activity))
names( sub1[maxCom])
names( sub1[maxCon])
kClust <- kmeans( sub1[,-c(562,563)]))
kClust <- kmeans( sub1[,-c(562,563)]), centers=6)
kClust <- kmeans( sub1[,-c(562,563)], centers=6)
table(kCluster$cluster, sub1$activity)
table(kClust$cluster, sub1$activity)
kClust <- kmeans( sub1[,-c(562,563)], centers=6, nstart=100)
table(kClust$cluster, sub1$activity)
dim(kClust$x)
dim(kClust$centers)
laying <- which(kClust$size == 29)
plot( kClust$centers[laying, 1:12], pch=19, ylab = "Laying Cluster")
names(sub1[,1:3])
walkdown <- which(kClust$size=49)
walkdown <- which(kClust$size==49)
plot(kClust$centers[walkdown,1:12], pch=19, ylab="Walkdown Cluster")
library("swirl")
swirl()
swirl()
dim(pm0)
head(pm0)
cnames
cnames <- strsplit(cnames, '|', fixed=TRUE)
cnames
names(pm0) <- make.names(cnames[[1]][wcol])
head(pm0)
x0 <- pm0$Sample.Value
str(x0)
mean(is.na(x0))
pm1 <- make.names(cnames[[1]][wcol])
names(pm1) <- make.names(cnames[[1]][wcol])
dim(pm1)
x1 <- pm1$Sample.Value
names(pm1) <- make.names(cnames[[1]][wcol])
x1 <- pm1$Sample.Value
quit()
ls
exit()
?
help
help
quit9)
bye
bye()
swirl()
x1 <- pm1$Sample.Value
names(pm1) <- make.names(cnames[[1]][wcol])
x1 <- pm1$Sample.Value
bye()
swirl()
x1
pm1
x1 <- pm1$V5
names(x1) <- ['v1', 'v2', 'v3', 'v4', 'Sample.Value']
names(x1) <- c('v1', 'v2', 'v3', 'v4', 'Sample.Value')
names(pm1) <- c('v1', 'v2', 'v3', 'v4', 'Sample.Value')
head(pm1)
x1 <- pm1$Sample.Value
mean(is.na(x1))
x0
summary(x0)
summary(x1)
boxplot(x0,x1)
boxplot(log10(x0), log10(x1))
negative <- x1 < 0
sum(negative, na.rm=TRUE)
mean(negative, na.rm=TRUE)
head(pm1)
names(pm1) <- c('v1', 'v2', 'v3', 'Date', 'Sample.Value')
date <- pm1$Date
dates <- pm1$Date
str(dates)
as.Date( as.character(dates), '%Y%m%d')
dates <- as.Date(as.character(dates), "%Y%m%d")
head(dates)
hist(dates[negative], "month")
swirl()
swirl()
NEI <- readRDS("data/summarySCC_PM25.rds")
SCC <- readRDS("data/Source_Classification_Code.rds")
setwd("C:/Users/skyst/Documents/ProfessionalDevelopment/DataSciencePortfolio/h1bdata")
NEI <- readRDS("data/summarySCC_PM25.rds")
SCC <- readRDS("data/Source_Classification_Code.rds")
NEI <- readRDS("data/summarySCC_PM25.rds")
SCC <- readRDS("data/Source_Classification_Code.rds")
setwd("C:/Users/skyst/Documents/ProfessionalDevelopment/tstl/courseraDataScienceSpecialization-JohnHopkins/EDAproject2")
NEI <- readRDS("data/summarySCC_PM25.rds")
SCC <- readRDS("data/Source_Classification_Code.rds")
